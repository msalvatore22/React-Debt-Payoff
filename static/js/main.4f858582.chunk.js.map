{"version":3,"sources":["DebtContext.js","USDformatter.js","payoffCalc.js","components/DebtForm.js","components/DebtTable.js","components/DebtLineChart.js","App.js","reportWebVitals.js","index.js"],"names":["DebtContext","React","createContext","formatter","Intl","NumberFormat","style","currency","payoffCalc","_ref","remainingBalance","monthlyPayment","interestRate","interestPerMonth","step2","payoffMonths","payoffYears","total","format","timeRemaining","valid","step3","Math","abs","step4","log10","payoffMonthsRounded","ceil","totalInterestPaid","numOfDays","years","months","days","concat","calculateTimingString","round","payoffScheduleMonthYear","numOfMonths","result","start_date","Date","getFullYear","getMonth","setMonth","push","toLocaleString","month","year","generatePayoffMonthYear","payoffScheduleBalances","principalReduction","toFixed","generatePayoffRemainingBalances","Number","parseFloat","DebtForm","_useContext","useContext","debt","debtSet","debtList","debtListSet","handleChange","prop","event","Object","objectSpread","defineProperty","target","value","react_default","a","createElement","Box","component","onSubmit","e","preventDefault","calculatedDebt","toConsumableArray","alert","sx","display","flexWrap","justifyContent","FormControl","fullWidth","m","InputLabel","htmlFor","OutlinedInput","id","onChange","startAdornment","InputAdornment","position","label","type","required","inputProps","max","step","min","width","variant","FilledInput","Button","DebtTable","length","TableContainer","marginTop","marginBottom","Paper","Table","minWidth","aria-label","TableHead","TableRow","TableCell","align","TableBody","map","row","idx","key","&:last-child td, &:last-child th","border","scope","ChartJS","register","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","options","responsive","plugins","legend","title","text","LineChart","data","labels","dl","longest","forEach","findLongestArray","datasets","index","borderColor","backgroundColor","cubicInterpolationMode","tension","dist","Container","styled","div","_templateObject","taggedTemplateLiteral","h1","_templateObject2","App","_useState","useState","_useState2","slicedToArray","_useState3","_useState4","src_DebtContext","Provider","CssBaseline","className","components_DebtForm","components_DebtTable","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.4f858582.chunk.js","sourcesContent":["import React from \"react\";\n\nconst DebtContext = React.createContext({});\n\nexport default DebtContext;\n","const formatter = new Intl.NumberFormat('en-US', {\n  style: 'currency',\n  currency: 'USD',\n});\n\nexport default formatter","import formatter from './USDformatter'\n\nconst calculateTimingString = numOfDays => {\n    let years = 0, months = 0, days = 0\n    while (numOfDays){\n        if (numOfDays >= 365){\n            years++\n            numOfDays -= 365\n        } else if(numOfDays >= 30){\n            months++\n            numOfDays -= 30\n        } else {\n            days ++\n            numOfDays--\n        }\n    }\n    return `${years} Years, ${months} Months and ${days} Days`\n}\n\nconst generatePayoffMonthYear = numOfMonths => {\n    const result = []\n    const start_date = new Date(new Date().getFullYear(), new Date().getMonth());\n    \n    while(numOfMonths>0){\n      start_date.setMonth(start_date.getMonth() + 1)\n            \n      result.push(start_date.toLocaleString('default', { month: 'long' , year: 'numeric'}));\n      numOfMonths--\n    }\n    return result\n}\n\nconst generatePayoffRemainingBalances = (remainingBalance, monthlyPayment, interestPerMonth) => {\n    const result = []\n    while(remainingBalance>0){\n        const principalReduction = monthlyPayment - (remainingBalance * interestPerMonth)\n        \n        if (principalReduction>remainingBalance){\n            result.push(0)\n        } else {\n            result.push((remainingBalance - principalReduction).toFixed(2))\n        }\n        remainingBalance = remainingBalance - principalReduction\n    }\n    return result\n}\n\nconst payoffCalc = ({ remainingBalance, monthlyPayment, interestRate }) => {\n    const interest = interestRate / 100\n    const interestPerMonth = interest / 12\n    const step2 = (remainingBalance / monthlyPayment) * interestPerMonth\n    if (step2>1){\n        // Your payments are not sufficient enough to cover interest. Loan will never be paid off.\n        return {\n            payoffMonths: '∞',\n            payoffYears: '∞',\n            total: formatter.format(remainingBalance),\n            timeRemaining: 'Your payments are not sufficient enough to cover interest. Loan will never be paid off.',\n            valid: false\n        }\n    }\n    const step3 = Math.abs(1 - step2)\n    const step4 = 1 + interestPerMonth\n    const step5 = Math.log10(1/step3)\n    const step6 = Math.log10(step4)\n    const payoffMonths = step5 / step6\n    const payoffMonthsRounded = Math.ceil(payoffMonths)\n    const days = Math.round(payoffMonths * 30.4167)\n    const payoffYears = payoffMonths / 12\n    const total = payoffMonths * monthlyPayment\n    const totalInterestPaid = total - remainingBalance\n\n    const timeRemaining = calculateTimingString(days)\n    const payoffScheduleMonthYear = generatePayoffMonthYear(payoffMonthsRounded)\n    const payoffScheduleBalances = generatePayoffRemainingBalances(remainingBalance, monthlyPayment, interestPerMonth)\n\n    return {\n        remainingBalance: formatter.format(remainingBalance),\n        monthlyPayment: formatter.format(monthlyPayment),\n        interestRate: Number.parseFloat(interestRate).toFixed(2),\n        payoffMonths: payoffMonths.toFixed(2),\n        payoffYears: payoffYears.toFixed(2),\n        total: formatter.format(total),\n        totalInterestPaid: formatter.format(totalInterestPaid),\n        timeRemaining: timeRemaining,\n        payoffScheduleMonthYear,\n        payoffScheduleBalances,\n        valid: true\n    }\n}\n\nexport default payoffCalc","import React, { useContext } from \"react\";\nimport {\n  FormControl,\n  InputLabel,\n  OutlinedInput,\n  InputAdornment,\n  Box,\n  FilledInput,\n  Button,\n} from \"@mui/material\";\nimport DebtContext from \"../DebtContext\";\nimport payoffCalc from \"../payoffCalc\";\n\nconst DebtForm = () => {\n  const { debt, debtSet, debtList, debtListSet } = useContext(DebtContext);\n\n  const handleChange = (prop) => (event) => {\n    debtSet({ ...debt, [prop]: event.target.value });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const calculatedDebt = payoffCalc(debt);\n    if (calculatedDebt.valid === true) {\n      debtListSet([...debtList, calculatedDebt]);\n      debtSet({\n        remainingBalance: \"\",\n        monthlyPayment: \"\",\n        interestRate: \"\",\n      });\n    } else {\n      alert(calculatedDebt.timeRemaining);\n    }\n  };\n\n  return (\n    <Box\n      component=\"form\"\n      onSubmit={handleSubmit}\n      sx={{\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        justifyContent: \"space-between\",\n      }}\n    >\n      <FormControl fullWidth sx={{ m: 1 }}>\n        <InputLabel htmlFor=\"remainingBalance\">Remaining Balance</InputLabel>\n        <OutlinedInput\n          id=\"remainingBalance\"\n          value={debt.remainingBalance}\n          onChange={handleChange(\"remainingBalance\")}\n          startAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\n          label=\"Remaining Balance\"\n          type=\"number\"\n          required\n          inputProps={{\n            max: 1000000000,\n            step: \".01\",\n            min: 1,\n          }}\n        />\n      </FormControl>\n      <FormControl sx={{ m: 1, width: \"48%\" }} variant=\"filled\">\n        <InputLabel htmlFor=\"filled-adornment-amount\">\n          Monthly Payment\n        </InputLabel>\n        <FilledInput\n          id=\"monthlyPayment\"\n          value={debt.monthlyPayment}\n          onChange={handleChange(\"monthlyPayment\")}\n          startAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\n          type=\"number\"\n          required\n          inputProps={{\n            max: 100000000,\n            step: \".01\",\n            min: 1,\n          }}\n        />\n      </FormControl>\n      <FormControl sx={{ m: 1, width: \"48%\" }} variant=\"filled\">\n        <InputLabel htmlFor=\"filled-adornment-amount\">Interest Rate</InputLabel>\n        <FilledInput\n          id=\"interestRate\"\n          value={debt.interestRate}\n          onChange={handleChange(\"interestRate\")}\n          startAdornment={<InputAdornment position=\"start\">%</InputAdornment>}\n          type=\"number\"\n          required\n          inputProps={{\n            min: 0.01,\n            max: 99.99,\n            step: \".01\",\n          }}\n        />\n      </FormControl>\n      <Button sx={{ m: 1 }} variant=\"outlined\" type=\"submit\">\n        Submit\n      </Button>\n    </Box>\n  );\n};\n\nexport default DebtForm;\n","import React, { useContext } from \"react\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper\n} from \"@mui/material\";\nimport DebtContext from \"../DebtContext\";\n\nconst DebtTable = () => {\n  const { debtList } = useContext(DebtContext)\n\n  return debtList.length>0 ? (\n    <TableContainer sx={{marginTop: 5, marginBottom: 5 }} component={Paper}>\n    <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n      <TableHead>\n        <TableRow>\n          <TableCell>Remaining Balance</TableCell>\n          <TableCell align=\"center\">Monthly Payment</TableCell>\n          <TableCell align=\"center\">Interest Rate</TableCell>\n          <TableCell align=\"center\">Payoff Time</TableCell>\n          <TableCell align=\"center\">Total Payoff Amount</TableCell>\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {debtList.map((row, idx) => (\n          <TableRow\n            key={idx}\n            sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n          >\n            <TableCell component=\"th\" scope=\"row\">\n              {row.remainingBalance}\n            </TableCell>\n            <TableCell align=\"center\">{row.monthlyPayment}</TableCell>\n            <TableCell align=\"center\">{row.interestRate}%</TableCell>\n            <TableCell align=\"center\">{row.timeRemaining}</TableCell>\n            <TableCell align=\"center\">{row.total}</TableCell>\n          </TableRow>\n        ))}\n      </TableBody>\n    </Table>\n  </TableContainer>\n  ) : null\n\n}\n\nexport default DebtTable","import React, { useContext } from \"react\";\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n} from \"chart.js\";\nimport { Line } from \"react-chartjs-2\";\nimport DebtContext from \"../DebtContext\";\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nconst options = {\n  responsive: true,\n  plugins: {\n    legend: {\n      position: \"top\",\n    },\n    title: {\n      display: true,\n      text: \"Debt Payoff Timeline\",\n    },\n  },\n};\n\nexport default function LineChart() {\n  const { debtList } = useContext(DebtContext);\n\n  const findLongestArray = (dl) => {\n    let longest = [];\n    dl.forEach((debt) => {\n      if (debt.payoffScheduleMonthYear > longest) {\n        longest = debt.payoffScheduleMonthYear;\n      }\n    });\n    return longest;\n  };\n\n  const labels = findLongestArray(debtList);\n\n  const data = {\n    labels,\n    datasets: debtList.map((debt, index) => ({\n      label: `Debt ${index+1}`,\n      data: debt.payoffScheduleBalances,\n      borderColor: \"rgb(255, 99, 132)\",\n      backgroundColor: \"rgba(255, 99, 132, 0.5)\",\n      cubicInterpolationMode: \"monotone\",\n      tension: 0.6,\n    })),\n  };\n\n  return debtList.length > 0 ? <Line options={options} data={data} /> : null;\n}\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport styled from \"@emotion/styled\";\nimport { CssBaseline } from \"@mui/material\"\n\nimport DebtContext from \"./DebtContext\";\n\nimport DebtForm from './components/DebtForm'\nimport DebtTable from \"./components/DebtTable\";\nimport DebtLineChart from \"./components/DebtLineChart\"\n\nconst Container = styled.div`\n  margin: auto;\n  width: 80%;\n  padding-top: 1rem;\n`;\nconst Title = styled.h1`\n  text-align: center;\n`;\n\nfunction App() {\n  const [debt, debtSet] = useState({\n    remainingBalance: '',\n    monthlyPayment: '',\n    interestRate: '',\n  })\n  const [debtList, debtListSet] = useState([])\n\n  return (\n    <DebtContext.Provider\n      value={{\n        debt,\n        debtSet,\n        debtList,\n        debtListSet,\n      }}\n    >\n      <CssBaseline />\n    <Container>\n      <Title className=\"title\">Debt Payoff</Title>\n      <DebtForm />\n      <DebtTable />\n      <DebtLineChart />\n    </Container>\n    </DebtContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}